plugins {
	id 'java'
	id 'distribution'
    id 'java-library'
    id 'java-library-distribution'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.33.0'
    id 'com.github.breadmoirai.github-release' version '2.2.12'    
}

group = 'com.redislabs'
description = 'Spring RediSearch'
sourceCompatibility = '1.8'

repositories {
	jcenter()
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation ('org.springframework.boot:spring-boot-starter:2.3.4.RELEASE') {
		exclude group: 'io.lettuce', module: 'lettuce-core'
	}
	api 'com.redislabs:lettusearch:2.4.4'
	api 'org.apache.commons:commons-pool2:2.9.0'
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'
}

test {
    useJUnitPlatform()
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : ''
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = 'spring-redisearch'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/RediSearch/spring-redisearch.git'
	    version {
	        gpg {
	            sign = true
	        }
	        mavenCentralSync {
	            sync = true
	            user = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
	            password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
	        }
	    }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.redislabs'
            artifactId 'spring-redisearch'

            pom {
                name = 'Spring RediSearch'
                packaging = 'jar'
                description = 'Spring-enabled client for RediSearch based on LettuSearch'
                url = 'https://github.com/RediSearch/spring-redisearch'

		        scm {
		          connection = 'scm:git:git://github.com/RediSearch/spring-redisearch.git'
		          developerConnection = 'scm:git:git@github.com:RediSearch/spring-redisearch.git'
		          url = 'https://github.com/RediSearch/spring-redisearch'
		        }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
            }
        }
    }
}

githubRelease {
    token = project.hasProperty('githubToken') ? project.property('githubToken') : ''
    owner "RediSearch"
    repo "spring-redisearch"
    releaseAssets distZip, distTar
    draft true
    body changelog()
}

afterReleaseBuild.dependsOn ":githubRelease"
afterReleaseBuild.dependsOn bintrayUpload
